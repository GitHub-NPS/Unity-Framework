# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane
fastlane_require "dotenv"

default_platform(:ios)

platform :ios do
    desc "Build an ipa"
    before_all do
        Dotenv.overload ".env.secret"
    end
  
    lane :publish do
        match_type = "appstore"
        xcodeproj = "Unity-iPhone.xcodeproj"
        identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

        app_store_connect_api_key

        match(
            type: match_type,
            generate_apple_certs: true
        )
   
        sh "printenv | sort"
        lane_context()

        update_code_signing_settings(
          use_automatic_signing: true,
          path: xcodeproj,
          targets: 'Unity-iPhone'
        )

        update_code_signing_settings(
          use_automatic_signing: false,
          team_id: ENV["sigh_#{identifier}_#{match_type}_team-id"],
          code_sign_identity: 'iPhone Distribution',
          targets: 'Unity-iPhone',
          path: xcodeproj,
          profile_name: ENV["sigh_#{identifier}_#{match_type}_profile-name"],
          profile_uuid: ENV["sigh_#{identifier}_#{match_type}"],
        )

        build_app(
          clean: true,
          scheme: 'Unity-iPhone',
          xcargs: '-allowProvisioningUpdates',
          export_method: "app-store"
        )

        sh "printenv | sort"
        lane_context()

        upload_to_testflight(skip_waiting_for_build_processing: true)
    end

    lane :beta do
        match_type = "adhoc"
        xcodeproj = "Unity-iPhone.xcodeproj"
        identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

        app_store_connect_api_key
        
        match(
          type: match_type,
          generate_apple_certs: true,
          force_for_new_devices: true
        )

        sh "printenv | sort"
        lane_context()

        update_project_provisioning(
          xcodeproj: xcodeproj,
          profile: ENV["sigh_#{identifier}_#{match_type}_profile-path"],
          target_filter: 'Unity-iPhone',
          build_configuration: "Release",
          code_signing_identity: "iPhone Distribution"
        )

        update_code_signing_settings(
          use_automatic_signing: true,
          path: xcodeproj,
          targets: 'Unity-iPhone'
        )

        update_code_signing_settings(
          use_automatic_signing: false,
          team_id: ENV["sigh_#{identifier}_#{match_type}_team-id"],
          code_sign_identity: 'iPhone Distribution',
          targets: 'Unity-iPhone',
          path: xcodeproj,
          profile_name: ENV["sigh_#{identifier}_#{match_type}_profile-name"],
          profile_uuid: ENV["sigh_#{identifier}_#{match_type}"],
        )
        

        build_app(
          clean: true,
          scheme: 'Unity-iPhone',
          xcargs: '-allowProvisioningUpdates',
          export_method: "ad-hoc"
        )
    
        firebase_app_distribution(
          app: ENV['FIREBASE_IOS_APP_ID'],
          groups: ENV['FIREBASE_GROUPS']
        )
    
        sh "printenv | sort"
        lane_context()
    end
end

private_lane :update_gem do
  sh(command: ['bundle', 'update'])
end

private_lane :load_env do
  Dir.chdir('../..') do
      Dotenv.load('.env.default')
  end
end